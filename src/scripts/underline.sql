/* Domínios */
CREATE DOMAIN SIM_NAO AS CHAR(1) NOT NULL CHECK (VALUE IN ('S', 'N'));
CREATE DOMAIN STATUS_PEDIDO AS CHAR(2) NOT NULL CHECK (VALUE IN ('PA', 'PF', 'CA', 'CF'));

/* Tabelas relacionadas à localização */
CREATE TABLE PAIS (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL,
	SIGLA 				VARCHAR(3)
);

CREATE TABLE ESTADO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL,
	SIGLA 				VARCHAR(3),
	PAIS_ID 			INTEGER NOT NULL,
	
	FOREIGN KEY (PAIS_ID) REFERENCES PAIS (ID)
);

CREATE TABLE CIDADE (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL,
	SIGLA 				VARCHAR(3),
	ESTADO_ID 			INTEGER NOT NULL,
	
	FOREIGN KEY (ESTADO_ID) REFERENCES ESTADO (ID)
);

/* Tabelas relacionadas às pessoas (Cliente, Fornecedor e Vendedor) */
CREATE TABLE PESSOA (
	ID				INTEGER 				NOT NULL	PRIMARY KEY,
	ENDERECO 			VARCHAR(80) 			NOT NULL,
	COMPLEMENTO			VARCHAR(40),
	BAIRRO				VARCHAR(20),
	CEP				CHAR(9),
	TELEFONE1			VARCHAR(12) 			NOT NULL,
	TELEFONE2 			VARCHAR(12),
	CIDADE_ID			INTEGER 				NOT NULL,
	
	FOREIGN KEY (CIDADE_ID) REFERENCES CIDADE (ID)
);

CREATE TABLE PESSOA_FISICA (
	ID				INTEGER					NOT NULL	PRIMARY KEY,
	NOME				VARCHAR(80)				NOT NULL,
	APELIDO				VARCHAR(40)				NOT NULL,
	DATA_NASCIMENTO			DATE					NOT NULL,
	RG				VARCHAR(20),
	CPF				VARCHAR(20),
	PESSOA_ID			INTEGER					NOT NULL,
	
	FOREIGN KEY (PESSOA_ID) REFERENCES PESSOA (ID)
);

CREATE TABLE PESSOA_JURIDICA (
	ID				INTEGER					NOT NULL	PRIMARY KEY,
	RAZAO_SOCIAL			VARCHAR(80)				NOT NULL,
	NOME_FANTASIA			VARCHAR(40)				NOT NULL,
	DATA_FUNDACAO			DATE,
	IE				VARCHAR(20),
	CNPJ				VARCHAR(18)				NOT NULL,
	PESSOA_ID			INTEGER					NOT NULL,
	
	FOREIGN KEY (PESSOA_ID) REFERENCES PESSOA (ID)
);

CREATE TABLE CLIENTE (
	ID				INTEGER 				NOT NULL	PRIMARY KEY,
	E_FISICA			SIM_NAO					NOT NULL,
	E_JURIDICA			SIM_NAO					NOT NULL,
	MOTIVO_BLOQUEIO			VARCHAR(40),
	PESSOA_FISICA_ID		INTEGER,
	PESSOA_JURIDICA_ID		INTEGER,
	
	FOREIGN KEY (PESSOA_FISICA_ID) REFERENCES PESSOA_FISICA (ID),
	FOREIGN KEY (PESSOA_JURIDICA_ID) REFERENCES PESSOA_JURIDICA (ID)
);

CREATE TABLE FORNECEDOR (
	ID				INTEGER 				NOT NULL	PRIMARY KEY,
	E_FISICA			SIM_NAO					NOT NULL,
	E_JURIDICA			SIM_NAO					NOT NULL,
	MOTIVO_BLOQUEIO			VARCHAR(40),
	PESSOA_FISICA_ID		INTEGER,
	PESSOA_JURIDICA_ID		INTEGER,
	
	FOREIGN KEY (PESSOA_FISICA_ID) REFERENCES PESSOA_FISICA (ID),
	FOREIGN KEY (PESSOA_JURIDICA_ID) REFERENCES PESSOA_JURIDICA (ID)
);

CREATE TABLE CARGO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(40) 				NOT NULL
);

CREATE TABLE FUNCIONARIO (
	ID				INTEGER 				NOT NULL	PRIMARY KEY,
	PESSOA_FISICA_ID		INTEGER					NOT NULL,
	CARGO_ID			INTEGER					NOT NULL,
	
	FOREIGN KEY (PESSOA_FISICA_ID) REFERENCES PESSOA_FISICA (ID),
	FOREIGN KEY (CARGO_ID) REFERENCES CARGO (ID)
);

/* Tabelas relacionadas ao sistema */
CREATE TABLE TIPO_USUARIO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL
);

CREATE TABLE USUARIO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	LOGIN 				VARCHAR(16) 			NOT NULL,
	SENHA 				VARCHAR(255) 			NOT NULL,
	SENHA_SALT 			CHAR(88) 				NOT NULL,
	NOME 				VARCHAR(80) 			NOT NULL,
	TIPO_USUARIO_ID 		INTEGER 				NOT NULL,
	FUNCIONARIO_ID 			INTEGER,
	
	FOREIGN KEY (TIPO_USUARIO_ID) REFERENCES TIPO_USUARIO (ID),
	FOREIGN KEY (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID)
);

/* Tabelas relacionadas à parte comercial */
CREATE TABLE PRODUTO (
    ID					INTEGER          		NOT NULL	PRIMARY KEY,
    PRECO_VENDA				NUMERIC(18, 2)   		NOT NULL,
    PRECO_COMPRA			NUMERIC(18, 2)  		NOT NULL,
    QTD_ESTOQUE				INTEGER          		NOT NULL,
    ESTOQUE_IDEAL			INTEGER,
    ESTOQUE_MINIMO			INTEGER,
    ATIVO				SIM_NAO          		NOT NULL
);

/* Compra e relacionados */
CREATE TABLE COMPRA (
    ID					INTEGER          		NOT NULL	PRIMARY KEY,
    DATA				DATE             		NOT NULL,
    TOTAL				NUMERIC(18, 2)   		NOT NULL,
    DESCONTO				NUMERIC(18, 2)   		NOT NULL,
    LIQUIDO				NUMERIC(18, 2)   		NOT NULL,
    STATUS				STATUS_PEDIDO			NOT NULL, /* Primeiro caractere: P = pedido ou C = compra. Segundo caractere: A = aberto ou F = fechado */
    FORNECEDOR_ID			INTEGER					NOT NULL,
    FUNCIONARIO_ID 			INTEGER					NOT NULL,
    USUARIO_ID				INTEGER					NOT NULL,
    
    FOREIGN KEY (FORNECEDOR_ID) REFERENCES FORNECEDOR (ID),
    FOREIGN KEY (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID),
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID)
);

CREATE TABLE ITEM_COMPRA (
    ID					INTEGER          		NOT NULL  PRIMARY KEY,
    QUANTIDADE				INTEGER          		NOT NULL,
    UNITARIO				NUMERIC(18, 2)   		NOT NULL,
    DESCONTO				NUMERIC(18, 2)   		NOT NULL,
    LIQUIDO				NUMERIC(18, 2)   		NOT NULL,
    COMPRA_ID				INTEGER          		NOT NULL,
    PRODUTO_ID				INTEGER          		NOT NULL,
    
    FOREIGN KEY (COMPRA_ID) REFERENCES COMPRA (ID),
    FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE CONTA_PAGAR (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    DATA				DATE             		NOT NULL,
    VALOR				NUMERIC(18, 2)   		NOT NULL,
    QUITADA				SIM_NAO          		NOT NULL,
    FORNECEDOR_ID			INTEGER          		NOT NULL,
    COMPRA_ID				INTEGER,
    
    FOREIGN KEY (FORNECEDOR_ID) REFERENCES FORNECEDOR (ID),
    FOREIGN KEY (COMPRA_ID) REFERENCES COMPRA (ID)
);

CREATE TABLE PARCELA_CONTA_PAGAR (
    ID					INTEGER         		NOT NULL  	PRIMARY KEY,
    VENCIMENTO				DATE             		NOT NULL,
    VALOR				NUMERIC(18, 2)   		NOT NULL,
    VALOR_PAGO				NUMERIC(18, 2)   		NOT NULL,
    QUITADA				SIM_NAO          		NOT NULL,
    CONTA_PAGAR_ID			INTEGER          		NOT NULL,
    
    FOREIGN KEY (CONTA_PAGAR_ID) REFERENCES CONTA_PAGAR (ID)
);

CREATE TABLE PAGAMENTO (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    DATA				DATE             		NOT NULL,
    VALOR				NUMERIC(18, 2)   		NOT NULL,
    DESCONTO				NUMERIC(18, 2)   		NOT NULL,
    MULTA				NUMERIC(18, 2)   		NOT NULL,
    JUROS				NUMERIC(18, 2)   		NOT NULL,
    PARCELA_CONTA_PAGAR_ID		INTEGER          		NOT NULL,
    
    FOREIGN KEY (PARCELA_CONTA_PAGAR_ID) REFERENCES PARCELA_CONTA_PAGAR (ID)
);

/* Promoções e relacionados */
CREATE TABLE PROMOCAO (
	ID				INTEGER					NOT NULL	PRIMARY KEY,
	NOME				VARCHAR(40)				NOT NULL,
	DESCRICAO			VARCHAR(80)				NOT NULL,
	DATA_INICIO			DATE					NOT NULL,
	DATA_FIM			DATE					NOT NULL,
	DESCONTO_PORCENTAGEM		INTEGER,
	DESCONTO_BRUTO			NUMERIC(18, 2),
	TEM_CUPOM			SIM_NAO
);

CREATE TABLE CUPOM (
	ID				INTEGER					NOT NULL	PRIMARY KEY,
	NOME				VARCHAR(40)				NOT NULL,
	PROMOCAO_ID			INTEGER					NOT NULL,
	
	FOREIGN KEY (PROMOCAO_ID) REFERENCES PROMOCAO (ID)
);

CREATE TABLE ITEM_PROMOCAO (
	ID				INTEGER					NOT NULL	PRIMARY KEY,
	PROMOCAO_ID			INTEGER					NOT NULL,
	PRODUTO_ID			INTEGER					NOT NULL,
	
	FOREIGN KEY (PROMOCAO_ID) REFERENCES PROMOCAO (ID),
	FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
);
	
/* Vendas e relacionados */
CREATE TABLE VENDA (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    DATA				DATE             		NOT NULL,
    TOTAL				NUMERIC(18, 2)  		NOT NULL,
    DESCONTO				NUMERIC(18, 2)   		NOT NULL,
    LIQUIDO				NUMERIC(18, 2)   		NOT NULL,
    STATUS				STATUS_PEDIDO, /* Primeiro caractere: P = pedido ou C = compra. Segundo caractere: A = aberto ou F = fechado */
    CLIENTE_ID				INTEGER					NOT NULL,
    PROMOCAO_ID				INTEGER,
    CUPOM_ID				INTEGER,
    FUNCIONARIO_ID			INTEGER					NOT NULL,
    USUARIO_ID				INTEGER					NOT NULL,
    
	FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (ID),
	FOREIGN KEY (PROMOCAO_ID) REFERENCES PROMOCAO (ID),
	FOREIGN KEY (CUPOM_ID) REFERENCES CUPOM (ID),
	FOREIGN KEY (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID),
	FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID)
);

CREATE TABLE ITEM_VENDA (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    QUANTIDADE				INTEGER          		NOT NULL,
    UNITARIO				NUMERIC(18, 2)   		NOT NULL,
    DESCONTO				NUMERIC(18, 2)   		NOT NULL,
    LIQUIDO				NUMERIC(18, 2)  		NOT NULL,
    VENDA_ID				INTEGER          		NOT NULL,
    PRODUTO_ID				INTEGER          		NOT NULL,
    
    FOREIGN KEY (VENDA_ID) REFERENCES VENDA (ID),
    FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE CONTA_RECEBER (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    DATA				DATE             		NOT NULL,
    VALOR				NUMERIC(18, 2)   		NOT NULL,
    QUITADA				SIM_NAO          		NOT NULL,
    CLIENTE_ID				INTEGER          		NOT NULL,
    VENDA_ID				INTEGER,
    
	FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (ID),
    FOREIGN KEY (VENDA_ID)  REFERENCES VENDA (ID)
);

CREATE TABLE PARCELA_CONTA_RECEBER (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    VENCIMENTO				DATE             		NOT NULL,
    VALOR				NUMERIC(18, 2)   		NOT NULL,
    VALOR_PAGO				NUMERIC(18, 2)   		NOT NULL,
    QUITADA				SIM_NAO          		NOT NULL,
    CONTA_RECEBER_ID			INTEGER          		NOT NULL,
    
    FOREIGN KEY (CONTA_RECEBER_ID) REFERENCES CONTA_RECEBER (ID)
);

CREATE TABLE RECEBIMENTO (
    ID					INTEGER          		NOT NULL  	PRIMARY KEY,
    DATA				DATE             		NOT NULL,
    VALOR				NUMERIC(18, 2)   		NOT NULL,
    DESCONTO				NUMERIC(18, 2)   		NOT NULL,
    MULTA				NUMERIC(18, 2)   		NOT NULL,
    JUROS				NUMERIC(18, 2)   		NOT NULL,
    PARCELA_CONTA_RECEBER_ID 		INTEGER          	NOT NULL,
    
    FOREIGN KEY (PARCELA_CONTA_RECEBER_ID) REFERENCES PARCELA_CONTA_RECEBER (ID)
);

/* Tabelas relacionadas aos livros */
CREATE TABLE CATEGORIA (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(40) 			NOT NULL
);

CREATE TABLE AUTOR (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL,
	BIO 				BLOB SUB_TYPE TEXT,
	IMAGEM 				VARCHAR(255),
	DATA_NASCIMENTO 		DATE,
	CIDADE_ID 			INTEGER 				NOT NULL,
	
	FOREIGN KEY (CIDADE_ID) REFERENCES CIDADE (ID)
);

CREATE TABLE COLECAO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL,
	BIO 				BLOB SUB_TYPE TEXT,
	IMAGEM 				VARCHAR(255),
	ATIVO 				SIM_NAO 				NOT NULL
);

CREATE TABLE AUTOR_COLECAO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	AUTOR_ID 			INTEGER 				NOT NULL,
	COLECAO_ID 			INTEGER 				NOT NULL,

	FOREIGN KEY (AUTOR_ID) REFERENCES AUTOR (ID),
	FOREIGN KEY (COLECAO_ID) REFERENCES COLECAO (ID)
);

CREATE TABLE LIVRO (
	ID				INTEGER 				NOT NULL 	PRIMARY KEY,
	NOME 				VARCHAR(80) 			NOT NULL,
	SUBTITULO 			VARCHAR(100),
	IMAGEM 				VARCHAR(255),
	TEM_COLECAO 			SIM_NAO 				NOT NULL,
	DESCRICAO 			BLOB SUB_TYPE TEXT,
	ISBN 				VARCHAR(20),
	DATA_PUBLICACAO			DATE,
	VALOR_UNITARIO 			NUMERIC(10, 2),
	QTD_ESTOQUE 			INTEGER 				NOT NULL,
	ATIVO 				SIM_NAO					NOT NULL,
	CATEGORIA_ID 			INTEGER 				NOT NULL,
	COLECAO_ID 			INTEGER,
	
	FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIA (ID),
	FOREIGN KEY (COLECAO_ID) REFERENCES COLECAO (ID)
);

CREATE TABLE AUTOR_LIVRO (
	ID				INTEGER 				NOT NULL	PRIMARY KEY,
	AUTOR_ID 			INTEGER 				NOT NULL,
	LIVRO_ID 			INTEGER 				NOT NULL,
	
	FOREIGN KEY (AUTOR_ID) REFERENCES AUTOR (ID),
	FOREIGN KEY (LIVRO_ID) REFERENCES LIVRO (ID)
);

/* Generators */
CREATE GENERATOR gen_pais;
CREATE GENERATOR gen_estado;
CREATE GENERATOR gen_cidade;

CREATE GENERATOR gen_pessoa;
CREATE GENERATOR gen_pessoa_fisica;
CREATE GENERATOR gen_pessoa_juridica;
CREATE GENERATOR gen_cliente;
CREATE GENERATOR gen_fornecedor;
CREATE GENERATOR gen_cargo;
CREATE GENERATOR gen_funcionario;

CREATE GENERATOR gen_produto;

CREATE GENERATOR gen_compra;
CREATE GENERATOR gen_item_compra;
CREATE GENERATOR gen_conta_pagar;
CREATE GENERATOR gen_parcela_conta_pagar;
CREATE GENERATOR gen_pagamento;

CREATE GENERATOR gen_cupom;
CREATE GENERATOR gen_item_promocao;
CREATE GENERATOR gen_venda;
CREATE GENERATOR gen_item_venda;
CREATE GENERATOR gen_conta_receber;
CREATE GENERATOR gen_parcela_conta_receber;
CREATE GENERATOR gen_recebimento;

CREATE GENERATOR gen_categoria;
CREATE GENERATOR gen_autor;
CREATE GENERATOR gen_colecao;
CREATE GENERATOR gen_autor_colecao;
CREATE GENERATOR gen_livro;
CREATE GENERATOR gen_autor_livro;
CREATE GENERATOR gen_tipo_usuario;
CREATE GENERATOR gen_usuario;

